{"ast":null,"code":"var _jsxFileName = \"/Users/art/Desktop/CSE115a/Medicine-Tracker/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nconst fetchCustomerID = (setCustomerID, gID) => {\n  console.log('on top (fetchCustomerID)');\n  console.log('gID:', gID);\n\n  if (gID === '') {\n    return;\n  }\n\n  console.log('after return (fetchCustomerID)');\n  fetch(`/customer/${gID}`, {\n    method: 'get'\n  }).then(response => {\n    if (!response.ok) {\n      throw response;\n    }\n\n    return response.json();\n  }).then(gID => {\n    setCustomerID(gID);\n    console.log('USER EXISTs');\n  }).catch(error => {\n    console.log('USER DOES NOT EXIST'); // postNewCustomer(gID);\n  });\n}; // function postNewCustomer = (gID) => {\n//   fetch(`/customer/${gID}`, {\n//     method: 'post',\n//   })\n//     .then\n// }\n\n\nfunction Login() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [customerID, setCustomerID] = React.useState('');\n\n  const handleCustomerID = gID => {\n    setCustomerID(gID);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n    console.log(result);\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      const gID = result.googleId; // grabbing google ID from result is working\n      // console.log('googleId: ', gID);\n\n      handleCustomerID(gID);\n      history.push('/home');\n    } catch (error) {\n      console.log(error);\n    }\n  }; // check if customer exists\n\n\n  React.useEffect(() => {\n    console.log('INSIDE useEffect');\n    console.log('customerID:', customerID);\n    fetchCustomerID(setCustomerID, customerID);\n  }, [customerID, setCustomerID]); // console.log(result);\n\n  const googleFailure = () => {\n    console.log('Google Sign In Failure. Try again');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h3\",\n          children: \"Medicine Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 3,\n            bgcolor: 'green'\n          },\n          children: /*#__PURE__*/_jsxDEV(LocalHospitalIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 3,\n            bgcolor: 'black'\n          },\n          children: /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"549599152851-v5c03ndj9k128cvngjtbqddgds1gkuqq.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              m: 3,\n              bgcolor: 'darkblue'\n            },\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"KBkG1D09o0pRaOS4iBLqxafKdLo=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/art/Desktop/CSE115a/Medicine-Tracker/frontend/src/components/Login.js"],"names":["React","useState","useEffect","Avatar","Button","CssBaseline","Box","LocalHospitalIcon","Typography","Container","createTheme","ThemeProvider","GoogleLogin","AccountCircle","GoogleIcon","useDispatch","useHistory","theme","fetchCustomerID","setCustomerID","gID","console","log","fetch","method","then","response","ok","json","catch","error","Login","dispatch","history","customerID","handleCustomerID","googleSuccess","res","result","profileObj","token","tokenId","type","data","googleId","push","googleFailure","marginTop","display","flexDirection","alignItems","m","bgcolor","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport {GoogleLogin} from 'react-google-login';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\n\nconst theme = createTheme();\n\nconst fetchCustomerID = (setCustomerID, gID) => {\n  console.log('on top (fetchCustomerID)');\n  console.log('gID:', gID);\n  if (gID === '') {\n    return;\n  }\n  console.log('after return (fetchCustomerID)');\n  fetch(`/customer/${gID}`, {\n    method: 'get',\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.json();\n    })\n    .then((gID) => {\n      setCustomerID(gID);\n      console.log('USER EXISTs');\n    })\n    .catch((error) => {\n      console.log('USER DOES NOT EXIST');\n      // postNewCustomer(gID);\n    });\n}\n\n// function postNewCustomer = (gID) => {\n//   fetch(`/customer/${gID}`, {\n//     method: 'post',\n//   })\n//     .then\n// }\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [customerID, setCustomerID] = React.useState('');\n  const handleCustomerID = (gID) => {\n    setCustomerID(gID);\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    console.log(result);\n    try {\n      dispatch({type: 'AUTH', data: {result, token} });\n      const gID = result.googleId;\n      // grabbing google ID from result is working\n      // console.log('googleId: ', gID);\n      handleCustomerID(gID);\n\n      history.push('/home');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // check if customer exists\n  React.useEffect(() => {\n    console.log('INSIDE useEffect');\n    console.log('customerID:', customerID);\n    fetchCustomerID(setCustomerID, customerID);\n  }, [customerID, setCustomerID]);\n\n  // console.log(result);\n\n  const googleFailure = () => {\n    console.log('Google Sign In Failure. Try again');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h3\">\n            Medicine Tracker\n          </Typography>\n          <Avatar sx={{ m: 3, bgcolor: 'green' }}>\n            <LocalHospitalIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h4\">\n            Google Sign In\n          </Typography>\n          <Avatar sx={{ m: 3, bgcolor: 'black' }}>\n            <GoogleIcon />\n          </Avatar>\n          <GoogleLogin\n            clientId=\"549599152851-v5c03ndj9k128cvngjtbqddgds1gkuqq.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n              sx={{ m: 3, bgcolor: 'darkblue' }}\n              color=\"primary\"\n              fullWidth\n              onClick={renderProps.onClick}\n              disabled={renderProps.disabled}\n              startIcon={<AccountCircle/>}\n              variant=\"contained\"\n              >\n                Sign In\n              </Button>  \n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}