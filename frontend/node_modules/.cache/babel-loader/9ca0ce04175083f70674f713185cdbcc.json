{"ast":null,"code":"var _jsxFileName = \"/Users/art/Desktop/CSE115a/Medicine-Tracker/frontend/src/components/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const weekendsVisible = React.useState({\n    weekendsVisible: true\n  });\n  const currentEvents = React.useState({\n    currentEvents: []\n  }); // const [channelObj, setChannelObj] = React.useState({\n  //   id: '',\n  //   name: '',\n  //   events: [],\n  // });\n  // const [channelFeed, setChannelFeed] = React.useState([]);\n  // const [dmDrawerOpen, setdmDrawerOpen] = React.useState(false);\n  // const [dmObj, setDmObj] = React.useState({\n  //   id: '',\n  //   name: '',\n  //   events: [],\n  // });\n  // const [dmFeed, setDmFeed] = React.useState([]);\n\n  const handleDateClick = selectInfo => {// let title = prompt('Please enter a new title for your event')\n    // let calendarApi = selectInfo.view.calendar\n    // calendarApi.unselect() // clear date selection\n    // if (title) {\n    //   calendarApi.addEvent({\n    //     id: createEventId(),\n    //     title,\n    //     start: selectInfo.startStr,\n    //     end: selectInfo.endStr,\n    //     allDay: selectInfo.allDay\n    //   })\n    // }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  };\n\n  const handleEvents = events => {\n    this.setState({\n      currentEvents: events\n    });\n  };\n\n  const renderEventContent = eventInfo => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: eventInfo.timeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      initialView: \"dayGridMonth\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      dayMaxEvents: true // dateClick={handleDateClick}\n      // eventContent={renderEventContent}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"UWcEhxPPMDRmgVIJAEoWTZII93E=\");\n\n_c = Calendar;\nexport default Calendar;\n/*\n \n\n         events: [\n            {\n              id: 'a',\n              groupId: ,\n              title: 'my event',\n              start: '2018-09-01',\n              end: '2018-09-01',\n              allDay: false,\n              editable: true,\n              display: 'auto'\n              daysOfWeek: []\n              startTime:\n              endTime:\n              startRecur:\n              endRecur:\n\n            }\n          ]\n\n\n\n  events: [\n    {\n      groupId: 'blueEvents', // recurrent events in this group move together\n      daysOfWeek: [ '4' ],\n      startTime: '10:45:00',\n      endTime: '12:45:00'\n    },\n    {\n      daysOfWeek: [ '3' ], // these recurrent events move separately\n      startTime: '11:00:00',\n      endTime: '11:30:00',\n      color: 'red'\n    }\n  ],\n  editable: true\n});\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/art/Desktop/CSE115a/Medicine-Tracker/frontend/src/components/Calendar.js"],"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","Calendar","weekendsVisible","useState","currentEvents","handleDateClick","selectInfo","handleEventClick","clickInfo","confirm","event","title","remove","handleEvents","events","setState","renderEventContent","eventInfo","timeText","left","center","right"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,qBAAzC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAElB,QAAMC,eAAe,GAAGP,KAAK,CAACQ,QAAN,CAAe;AAACD,IAAAA,eAAe,EAAE;AAAlB,GAAf,CAAxB;AACA,QAAME,aAAa,GAAGT,KAAK,CAACQ,QAAN,CAAe;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAAf,CAAtB,CAHkB,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,eAAe,GAAIC,UAAD,IAAgB,CACtC;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD;;AAiBA,QAAMC,gBAAgB,GAAIC,SAAD,IAAe;AACtC,QAAIC,OAAO,CAAE,8CAA6CD,SAAS,CAACE,KAAV,CAAgBC,KAAM,GAArE,CAAX,EAAqF;AACnFH,MAAAA,SAAS,CAACE,KAAV,CAAgBE,MAAhB;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,SAAKC,QAAL,CAAc;AACZX,MAAAA,aAAa,EAAEU;AADH,KAAd;AAGD,GAJD;;AAMA,QAAME,kBAAkB,GAAIC,SAAD,IAAe;AAC1C,wBACE;AAAA,8BACE;AAAA,kBAAIA,SAAS,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,SAAS,CAACP,KAAV,CAAgBC;AAApB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMC,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,CAACb,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADX;AAEE,MAAA,aAAa,EAAE;AACbmB,QAAAA,IAAI,EAAE,iBADO;AAEbC,QAAAA,MAAM,EAAE,OAFK;AAGbC,QAAAA,KAAK,EAAE;AAHM,OAFjB;AAOE,MAAA,WAAW,EAAC,cAPd;AAQE,MAAA,QAAQ,EAAE,IARZ;AASE,MAAA,UAAU,EAAE,IATd;AAUE,MAAA,YAAY,EAAE,IAVhB;AAWE,MAAA,YAAY,EAAE,IAXhB,CAYE;AACA;;AAbF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5EQpB,Q;;KAAAA,Q;AA8ET,eAAeA,QAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\nfunction Calendar() {\n\n  const weekendsVisible = React.useState({weekendsVisible: true });\n  const currentEvents = React.useState({ currentEvents: [] });\n\n  // const [channelObj, setChannelObj] = React.useState({\n  //   id: '',\n  //   name: '',\n  //   events: [],\n  // });\n  // const [channelFeed, setChannelFeed] = React.useState([]);\n  // const [dmDrawerOpen, setdmDrawerOpen] = React.useState(false);\n  // const [dmObj, setDmObj] = React.useState({\n  //   id: '',\n  //   name: '',\n  //   events: [],\n  // });\n  // const [dmFeed, setDmFeed] = React.useState([]);\n\n  const handleDateClick = (selectInfo) => {\n    // let title = prompt('Please enter a new title for your event')\n    // let calendarApi = selectInfo.view.calendar\n\n    // calendarApi.unselect() // clear date selection\n\n    // if (title) {\n    //   calendarApi.addEvent({\n    //     id: createEventId(),\n    //     title,\n    //     start: selectInfo.startStr,\n    //     end: selectInfo.endStr,\n    //     allDay: selectInfo.allDay\n    //   })\n    // }\n  }\n\n  const handleEventClick = (clickInfo) => {\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove()\n    }\n  }\n\n  const handleEvents = (events) => {\n    this.setState({\n      currentEvents: events\n    })\n  }\n\n  const renderEventContent = (eventInfo) => {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  )\n  }\n\n  return (\n    <div className='Calendar'>\n        <FullCalendar\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          headerToolbar={{\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          }}\n          initialView='dayGridMonth'\n          editable={true}\n          selectable={true}\n          selectMirror={true}\n          dayMaxEvents={true}\n          // dateClick={handleDateClick}\n          // eventContent={renderEventContent}\n        />\n    </div>\n  )\n}\n\nexport default Calendar;\n\n\n/*\n \n\n         events: [\n            {\n              id: 'a',\n              groupId: ,\n              title: 'my event',\n              start: '2018-09-01',\n              end: '2018-09-01',\n              allDay: false,\n              editable: true,\n              display: 'auto'\n              daysOfWeek: []\n              startTime:\n              endTime:\n              startRecur:\n              endRecur:\n\n            }\n          ]\n\n\n\n  events: [\n    {\n      groupId: 'blueEvents', // recurrent events in this group move together\n      daysOfWeek: [ '4' ],\n      startTime: '10:45:00',\n      endTime: '12:45:00'\n    },\n    {\n      daysOfWeek: [ '3' ], // these recurrent events move separately\n      startTime: '11:00:00',\n      endTime: '11:30:00',\n      color: 'red'\n    }\n  ],\n  editable: true\n});\n*/"]},"metadata":{},"sourceType":"module"}