{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlim/Medicine-Tracker/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { GoogleLogin } from 'react-google-login';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction Login() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/home');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign in was unsuccessful. Try again later\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'red'\n          },\n          children: /*#__PURE__*/_jsxDEV(LocalHospitalIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'red'\n          },\n          children: /*#__PURE__*/_jsxDEV(LocalHospitalIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"549599152851-v5c03ndj9k128cvngjtbqddgds1gkuqq.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 26\n            }, this),\n            variant: \"contained\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/christopherlim/Medicine-Tracker/frontend/src/components/Login.js"],"names":["React","useState","useEffect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Box","LocalHospitalIcon","Typography","Container","createTheme","ThemeProvider","GoogleLogin","AccountCircle","useDispatch","useHistory","theme","Login","dispatch","history","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","marginTop","display","flexDirection","alignItems","m","bgcolor","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport {GoogleLogin} from 'react-google-login';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\n\nconst theme = createTheme();\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    try {\n      dispatch({type: 'AUTH', data: {result, token} });\n      history.push('/home');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign in was unsuccessful. Try again later\");\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'red' }}>\n            <LocalHospitalIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h4\">\n            Google Sign In\n          </Typography>\n          <Avatar sx={{ m: 1, bgcolor: 'red' }}>\n            <LocalHospitalIcon />\n          </Avatar>\n          <GoogleLogin\n            clientId=\"549599152851-v5c03ndj9k128cvngjtbqddgds1gkuqq.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n              color=\"primary\"\n              fullWidth\n              onClick={renderProps.onClick}\n              disabled={renderProps.disabled}\n              startIcon={<AccountCircle/>}\n              variant=\"contained\"\n              >\n                Sign In\n              </Button>  \n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}