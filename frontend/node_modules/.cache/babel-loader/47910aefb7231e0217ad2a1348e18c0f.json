{"ast":null,"code":"var _jsxFileName = \"/Users/akinder/Documents/GitHub/Medicine-Tracker/frontend/src/components/MedForm.js\";\n\n/*\n// date-fns\nnpm install @date-io/date-fns\n*/\nimport React from \"react\"; // import MaterialDateTimePicker from './MaterialDateTimePicker';\n// import DateAdapter from '@mui/lab/AdapterDateFns';\n\nimport Avatar from \"@mui/material/Avatar\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Slider from \"@mui/material/Slider\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport axios from \"axios\";\nimport { WorkspaceContext } from \"../App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst input = {\n  googleID: \"12345\",\n  name: \"test1\",\n  description: \"description 1\",\n  frequency: 1,\n  doses: 10,\n  totalAmount: 100\n};\n\nconst PostMedicine = gID => {\n  axios.post(`http://localhost:4000/v0/medicine/${gID}`, input).then(response => {\n    console.log(response);\n  }).catch(() => {\n    console.log(\"Cannot Post medicine...\\n\");\n  });\n};\n\n_c = PostMedicine;\nexport default function MedForm() {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  // const [measurement, setMeasurement] = React.useState('mg');\n  // const [dosage, setDosage] = React.useState(0);\n  // const [datetime, setDatetime] = React.useState('2021-11-10T10:30');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      medName: data.get(\"name\"),\n      medType: data.get(\"type\"),\n      medDesc: data.get(\"description\") //   medFreq: data.get(\"frequency\"),\n      //   medDosage: data.get(\"dosage\"),\n      //   medMeasurement: data.get(\"measurement\"),\n\n    });\n    input[\"name\"] = data.get(\"name\");\n    input[\"description\"] = data.get(\"description\");\n    input[\"dosage\"] = dosage.value;\n    input[\"measurement\"] = measurement.value;\n    input[\"frequency\"] = input[\"datetime\"] = datetime.value;\n    PostMedicine(\"12345\"); //needs to be changed\n  };\n\n  const DosageInput = () => {\n    _s();\n\n    // const {measurementS, dosageS} = React.useContext(WorkspaceContext);\n    // const [measurement, setMeasurement] = measurementS;\n    // const [dosage, setDosage] = dosageS;\n    const [measurement, setMeasurement] = React.useState(\"mg\");\n    const [dosage, setDosage] = React.useState(0);\n\n    const handleMeasurementChange = event => {\n      setMeasurement(event.target.value);\n    };\n\n    const handleDosageChange = event => {\n      setDosage(event.target.value);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"dosage\",\n        label: \"Dosage\",\n        value: dosage,\n        sx: {\n          m: 1,\n          width: \"25ch\"\n        },\n        varient: \"outlined\",\n        onChange: handleDosageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 140\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"measurement-label\",\n          children: \"Measurement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          required: true,\n          labelId: \"measurement-label\",\n          id: \"measurement-label\",\n          value: measurement,\n          label: \"Measurement\",\n          onChange: handleMeasurementChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"mg\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"mg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"mL\",\n            children: \"mL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"tablet\",\n            children: \"tablet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"pill(s)\",\n            children: \"pill(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"mg/mL\",\n            children: \"mg/mL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(DosageInput, \"yIhXgYJS4Sz5dDvNNMxDJYlg2k0=\");\n\n  const QuantitySlider = () => {\n    // const [value, setValue] = React.useState(0);\n    const marks = [{\n      value: 0,\n      label: \"0\"\n    }, {\n      value: 30,\n      label: \"30\"\n    }, {\n      value: 60,\n      label: \"60\"\n    }, {\n      value: 100,\n      label: \"100\"\n    }];\n\n    const valuetext = value => {\n      return `${value}`;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"total-amount-slider\",\n        gutterBottom: true,\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        defaultValue: 30,\n        getAriaValueText: valuetext,\n        \"aria-labelledby\": \"total-amount-slider\",\n        step: 10,\n        valueLabelDisplay: \"auto\",\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  };\n\n  const TimeOfDayInput = () => {\n    _s2();\n\n    const date = new Date(); // const { valueS } = React.useContext(WorkspaceContext);\n    // const [value, setValue] = valueS;\n\n    const [medTime, setMedTime] = React.useState('2021-11-10T10:30');\n\n    const handleMedtime = event => {\n      setMedTime(event.target.value);\n    };\n\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"first-dose-datetime-local\",\n      label: \"First Dose\",\n      type: \"datetime-local\",\n      defaultValue: \"2021-11-10T10:30\",\n      value: medTime,\n      onChange: handleMedTime,\n      sx: {\n        width: 250\n      },\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s2(TimeOfDayInput, \"g1qFY/H00se/UTspvgLMnNEJtF4=\");\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 3,\n            bgcolor: \"green\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LocalHospitalIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Medicine Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"name\",\n                label: \"Medicine Name\",\n                id: \"name\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"type\",\n                label: \"Medicine Type\",\n                id: \"tyle\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                multiline: true,\n                fullWidth: true,\n                placeholder: \"Description of medication\",\n                name: \"description\",\n                label: \"Medecine Description\",\n                id: \"description\",\n                variant: \"outlined\",\n                rows: 2 // rowsMax={4}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(DosageInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(QuantitySlider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TimeOfDayInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n} // function DaysCheckboxes() {\n//     const {stateS} = React.useContext(WorkspaceContext);\n//     const [state, setState] = stateS;\n//     const handleChange = (event) => {\n//         setState({\n//             ...state,\n//             [event.target.name]: event.target.checked,\n//         });\n//     };\n//     const { sunday, monday, tuesday, wednesday, thursday, friday, saturday } = state;\n//     return (\n//         <Grid item xs={12}>\n//             <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n//                 <FormLabel component=\"legend\">Days</FormLabel>\n//                 <FormGroup>\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={sunday} onChange={handleChange} name=\"sunday\" />\n//                         }\n//                         label=\"Sunday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={monday} onChange={handleChange} name=\"monday\" />\n//                         }\n//                         label=\"Monday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={tuesday} onChange={handleChange} name=\"tuesday\" />\n//                         }\n//                         label=\"Tuesday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={wednesday} onChange={handleChange} name=\"wednesday\" />\n//                         }\n//                         label=\"Wednesday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={thursday} onChange={handleChange} name=\"thursday\" />\n//                         }\n//                         label=\"Thursday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={friday} onChange={handleChange} name=\"friday\" />\n//                         }\n//                         label=\"Friday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={saturday} onChange={handleChange} name=\"saturday\" />\n//                         }\n//                         label=\"Saturday\"\n//                     />\n//                 </FormGroup>\n//                 <FormHelperText>Must select at least one day</FormHelperText>\n//             </FormControl>\n//         </Grid>\n//     );\n// }\n\n_c2 = MedForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostMedicine\");\n$RefreshReg$(_c2, \"MedForm\");","map":{"version":3,"sources":["/Users/akinder/Documents/GitHub/Medicine-Tracker/frontend/src/components/MedForm.js"],"names":["React","Avatar","LocalHospitalIcon","Button","CssBaseline","TextField","Slider","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","InputLabel","Radio","RadioGroup","MenuItem","Select","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","axios","WorkspaceContext","theme","input","googleID","name","description","frequency","doses","totalAmount","PostMedicine","gID","post","then","response","console","log","catch","MedForm","handleSubmit","event","preventDefault","data","FormData","currentTarget","medName","get","medType","medDesc","dosage","value","measurement","datetime","DosageInput","setMeasurement","useState","setDosage","handleMeasurementChange","target","handleDosageChange","m","width","minWidth","QuantitySlider","marks","label","valuetext","TimeOfDayInput","date","Date","medTime","setMedTime","handleMedtime","handleMedTime","shrink","marginTop","display","flexDirection","alignItems","bgcolor","mt","mb"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,KAAK,GAAGJ,WAAW,EAAzB;AAEA,MAAMK,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,OADE;AAEZC,EAAAA,IAAI,EAAE,OAFM;AAGZC,EAAAA,WAAW,EAAE,eAHD;AAIZC,EAAAA,SAAS,EAAE,CAJC;AAKZC,EAAAA,KAAK,EAAE,EALK;AAMZC,EAAAA,WAAW,EAAE;AAND,CAAd;;AAQA,MAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BX,EAAAA,KAAK,CACFY,IADH,CACS,qCAAoCD,GAAI,EADjD,EACoDR,KADpD,EAEGU,IAFH,CAESC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAJH,EAKGG,KALH,CAKS,MAAM;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,GAPH;AAQD,CATD;;KAAMN,Y;AAWN,eAAe,SAASQ,OAAT,GAAmB;AAAA;AAAA;;AAChC;AACA;AACA;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,KAAK,CAACI,aAAnB,CAAb;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY;AACVS,MAAAA,OAAO,EAAEH,IAAI,CAACI,GAAL,CAAS,MAAT,CADC;AAEVC,MAAAA,OAAO,EAAEL,IAAI,CAACI,GAAL,CAAS,MAAT,CAFC;AAGVE,MAAAA,OAAO,EAAEN,IAAI,CAACI,GAAL,CAAS,aAAT,CAHC,CAIZ;AACA;AACA;;AANY,KAAZ;AAQAvB,IAAAA,KAAK,CAAC,MAAD,CAAL,GAAgBmB,IAAI,CAACI,GAAL,CAAS,MAAT,CAAhB;AACAvB,IAAAA,KAAK,CAAC,aAAD,CAAL,GAAuBmB,IAAI,CAACI,GAAL,CAAS,aAAT,CAAvB;AACAvB,IAAAA,KAAK,CAAC,QAAD,CAAL,GAAkB0B,MAAM,CAACC,KAAzB;AACA3B,IAAAA,KAAK,CAAC,aAAD,CAAL,GAAuB4B,WAAW,CAACD,KAAnC;AACA3B,IAAAA,KAAK,CAAC,WAAD,CAAL,GACAA,KAAK,CAAC,UAAD,CAAL,GAAoB6B,QAAQ,CAACF,KAD7B;AAEApB,IAAAA,YAAY,CAAC,OAAD,CAAZ,CAjB8B,CAiBP;AACxB,GAlBD;;AAoBA,QAAMuB,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA;AACA;AACA,UAAM,CAACF,WAAD,EAAcG,cAAd,IAAgC5D,KAAK,CAAC6D,QAAN,CAAe,IAAf,CAAtC;AACA,UAAM,CAACN,MAAD,EAASO,SAAT,IAAsB9D,KAAK,CAAC6D,QAAN,CAAe,CAAf,CAA5B;;AAEA,UAAME,uBAAuB,GAAIjB,KAAD,IAAW;AACzCc,MAAAA,cAAc,CAACd,KAAK,CAACkB,MAAN,CAAaR,KAAd,CAAd;AACD,KAFD;;AAIA,UAAMS,kBAAkB,GAAInB,KAAD,IAAW;AACpCgB,MAAAA,SAAS,CAAChB,KAAK,CAACkB,MAAN,CAAaR,KAAd,CAAT;AACD,KAFD;;AAIA,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,KAAK,EAAED,MAJT;AAKE,QAAA,EAAE,EAAE;AAAEW,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,KAAK,EAAE;AAAf,SALN;AAME,QAAA,OAAO,EAAC,UANV;AAOE,QAAA,QAAQ,EAAEF;AAPZ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQE,UAAAA,QAAQ,EAAE;AAAlB,SAAjB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,OAAO,EAAC,mBAFV;AAGE,UAAA,EAAE,EAAC,mBAHL;AAIE,UAAA,KAAK,EAAEX,WAJT;AAKE,UAAA,KAAK,EAAC,aALR;AAME,UAAA,QAAQ,EAAEM,uBANZ;AAAA,kCAQE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,IAAhB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAWE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD,GA/CD;;AAzBgC,KAyB1BJ,WAzB0B;;AA2ElC,QAAMU,cAAc,GAAG,MAAM;AACzB;AACA,UAAMC,KAAK,GAAG,CACZ;AACEd,MAAAA,KAAK,EAAE,CADT;AAEEe,MAAAA,KAAK,EAAE;AAFT,KADY,EAKZ;AACEf,MAAAA,KAAK,EAAE,EADT;AAEEe,MAAAA,KAAK,EAAE;AAFT,KALY,EASZ;AACEf,MAAAA,KAAK,EAAE,EADT;AAEEe,MAAAA,KAAK,EAAE;AAFT,KATY,EAaZ;AACEf,MAAAA,KAAK,EAAE,GADT;AAEEe,MAAAA,KAAK,EAAE;AAFT,KAbY,CAAd;;AAmBA,UAAMC,SAAS,GAAIhB,KAAD,IAAW;AAC3B,aAAQ,GAAEA,KAAM,EAAhB;AACD,KAFD;;AAIA,wBACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,qBAAf;AAAqC,QAAA,YAAY,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,YAAY,EAAE,EADhB;AAEE,QAAA,gBAAgB,EAAEgB,SAFpB;AAGE,2BAAgB,qBAHlB;AAIE,QAAA,IAAI,EAAE,EAJR;AAKE,QAAA,iBAAiB,EAAC,MALpB;AAME,QAAA,KAAK,EAAEF;AANT;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAxCH;;AA0CE,QAAMG,cAAc,GAAG,MAAM;AAAA;;AAC3B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb,CAD2B,CAE3B;AACA;;AACA,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7E,KAAK,CAAC6D,QAAN,CAAe,kBAAf,CAA9B;;AAEA,UAAMiB,aAAa,GAAIhC,KAAD,IAAW;AAC/B+B,MAAAA,UAAU,CAAC/B,KAAK,CAACkB,MAAN,CAAaR,KAAd,CAAV;AACD,KAFD;;AAIA,wBACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,2BADL;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,IAAI,EAAC,gBAHP;AAIE,MAAA,YAAY,EAAC,kBAJf;AAKE,MAAA,KAAK,EAAEoB,OALT;AAME,MAAA,QAAQ,EAAEG,aANZ;AAOE,MAAA,EAAE,EAAE;AAAEZ,QAAAA,KAAK,EAAE;AAAT,OAPN;AAQE,MAAA,eAAe,EAAE;AACfa,QAAAA,MAAM,EAAE;AADO;AARnB;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAxBD;;AArHgC,MAqH1BP,cArH0B;;AA+IhC,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAE7C,KAAtB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFqD,UAAAA,SAAS,EAAE,CADT;AAEFC,UAAAA,OAAO,EAAE,MAFP;AAGFC,UAAAA,aAAa,EAAE,QAHb;AAIFC,UAAAA,UAAU,EAAE;AAJV,SADN;AAAA,gCAQE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE;AAAElB,YAAAA,CAAC,EAAE,CAAL;AAAQmB,YAAAA,OAAO,EAAE;AAAjB,WAAZ;AAAA,iCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE,QAAC,GAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,UAAU,MAFZ;AAGE,UAAA,QAAQ,EAAExC,YAHZ;AAIE,UAAA,EAAE,EAAE;AAAEyC,YAAAA,EAAE,EAAE;AAAN,WAJN;AAAA,kCAME,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAC,eAJR;AAKE,gBAAA,EAAE,EAAC,MALL;AAME,gBAAA,OAAO,EAAC;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,IAAI,EAAC,MAHP;AAIE,gBAAA,KAAK,EAAC,eAJR;AAKE,gBAAA,EAAE,EAAC,MALL;AAME,gBAAA,OAAO,EAAC;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXF,eAqBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,WAAW,EAAC,2BAJd;AAKE,gBAAA,IAAI,EAAC,aALP;AAME,gBAAA,KAAK,EAAC,sBANR;AAOE,gBAAA,EAAE,EAAC,aAPL;AAQE,gBAAA,OAAO,EAAC,UARV;AASE,gBAAA,IAAI,EAAE,CATR,CAUE;;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBArBF,eAmCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnCF,eAsCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAtCF,eAyCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAoDE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,OAAO,EAAC,WAHV;AAIE,YAAA,KAAK,EAAC,SAJR;AAKE,YAAA,EAAE,EAAE;AAAEA,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,EAAE,EAAE;AAAb,aALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoFD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MArSwB3C,O","sourcesContent":["/*\n// date-fns\nnpm install @date-io/date-fns\n*/\nimport React from \"react\";\n// import MaterialDateTimePicker from './MaterialDateTimePicker';\n// import DateAdapter from '@mui/lab/AdapterDateFns';\nimport Avatar from \"@mui/material/Avatar\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Slider from \"@mui/material/Slider\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport axios from \"axios\";\n\nimport { WorkspaceContext } from \"../App.js\";\n\nconst theme = createTheme();\n\nconst input = {\n  googleID: \"12345\",\n  name: \"test1\",\n  description: \"description 1\",\n  frequency: 1,\n  doses: 10,\n  totalAmount: 100,\n};\nconst PostMedicine = (gID) => {\n  axios\n    .post(`http://localhost:4000/v0/medicine/${gID}`, input)\n    .then((response) => {\n      console.log(response);\n    })\n    .catch(() => {\n      console.log(\"Cannot Post medicine...\\n\");\n    });\n};\n\nexport default function MedForm() {\n  // const [measurement, setMeasurement] = React.useState('mg');\n  // const [dosage, setDosage] = React.useState(0);\n  // const [datetime, setDatetime] = React.useState('2021-11-10T10:30');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      medName: data.get(\"name\"),\n      medType: data.get(\"type\"),\n      medDesc: data.get(\"description\"),\n    //   medFreq: data.get(\"frequency\"),\n    //   medDosage: data.get(\"dosage\"),\n    //   medMeasurement: data.get(\"measurement\"),\n    });\n    input[\"name\"] = data.get(\"name\");\n    input[\"description\"] = data.get(\"description\");\n    input[\"dosage\"] = dosage.value;\n    input[\"measurement\"] = measurement.value;\n    input[\"frequency\"] = \n    input[\"datetime\"] = datetime.value;\n    PostMedicine(\"12345\"); //needs to be changed\n  };\n\n  const DosageInput = () => {\n    // const {measurementS, dosageS} = React.useContext(WorkspaceContext);\n    // const [measurement, setMeasurement] = measurementS;\n    // const [dosage, setDosage] = dosageS;\n    const [measurement, setMeasurement] = React.useState(\"mg\");\n    const [dosage, setDosage] = React.useState(0);\n\n    const handleMeasurementChange = (event) => {\n      setMeasurement(event.target.value);\n    };\n\n    const handleDosageChange = (event) => {\n      setDosage(event.target.value);\n    };\n\n    return (\n      <div>\n        <TextField\n          required\n          id=\"dosage\"\n          label=\"Dosage\"\n          value={dosage}\n          sx={{ m: 1, width: \"25ch\" }}\n          varient=\"outlined\"\n          onChange={handleDosageChange}\n        />\n        <FormControl sx={{ m: 1, minWidth: 140 }}>\n          <InputLabel id=\"measurement-label\">Measurement</InputLabel>\n          <Select\n            required\n            labelId=\"measurement-label\"\n            id=\"measurement-label\"\n            value={measurement}\n            label=\"Measurement\"\n            onChange={handleMeasurementChange}\n          >\n            <MenuItem value=\"mg\">\n              <em>mg</em>\n            </MenuItem>\n            <MenuItem value={\"mL\"}>mL</MenuItem>\n            <MenuItem value={\"tablet\"}>tablet</MenuItem>\n            <MenuItem value={\"pill(s)\"}>pill(s)</MenuItem>\n            <MenuItem value={\"mg/mL\"}>mg/mL</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    );\n  };\n\n\nconst QuantitySlider = () => {\n    // const [value, setValue] = React.useState(0);\n    const marks = [\n      {\n        value: 0,\n        label: \"0\",\n      },\n      {\n        value: 30,\n        label: \"30\",\n      },\n      {\n        value: 60,\n        label: \"60\",\n      },\n      {\n        value: 100,\n        label: \"100\",\n      },\n    ];\n  \n    const valuetext = (value) => {\n      return `${value}`;\n    };\n  \n    return (\n      <div>\n        <Typography id=\"total-amount-slider\" gutterBottom>\n          Total Amount\n        </Typography>\n        <Slider\n          defaultValue={30}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"total-amount-slider\"\n          step={10}\n          valueLabelDisplay=\"auto\"\n          marks={marks}\n        />\n      </div>\n    );\n  }\n\n  const TimeOfDayInput = () => {\n    const date = new Date();\n    // const { valueS } = React.useContext(WorkspaceContext);\n    // const [value, setValue] = valueS;\n    const [medTime, setMedTime] = React.useState('2021-11-10T10:30');\n  \n    const handleMedtime = (event) => {\n      setMedTime(event.target.value);\n    };\n  \n    return (\n      <TextField\n        id=\"first-dose-datetime-local\"\n        label=\"First Dose\"\n        type=\"datetime-local\"\n        defaultValue=\"2021-11-10T10:30\"\n        value={medTime}\n        onChange={handleMedTime}\n        sx={{ width: 250 }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 3, bgcolor: \"green\" }}>\n            <LocalHospitalIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Medicine Form\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"name\"\n                  label=\"Medicine Name\"\n                  id=\"name\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"type\"\n                  label=\"Medicine Type\"\n                  id=\"tyle\"\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  multiline\n                  fullWidth\n                  placeholder=\"Description of medication\"\n                  name=\"description\"\n                  label=\"Medecine Description\"\n                  id=\"description\"\n                  variant=\"outlined\"\n                  rows={2}\n                  // rowsMax={4}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <DosageInput />\n              </Grid>\n              <Grid item xs={12}>\n                <QuantitySlider />\n              </Grid>\n              <Grid item xs={12}>\n                <TimeOfDayInput />\n              </Grid>\n            </Grid>\n            {/* <DaysCheckboxes /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\n// function DaysCheckboxes() {\n//     const {stateS} = React.useContext(WorkspaceContext);\n//     const [state, setState] = stateS;\n\n//     const handleChange = (event) => {\n//         setState({\n//             ...state,\n//             [event.target.name]: event.target.checked,\n//         });\n//     };\n\n//     const { sunday, monday, tuesday, wednesday, thursday, friday, saturday } = state;\n//     return (\n//         <Grid item xs={12}>\n//             <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n//                 <FormLabel component=\"legend\">Days</FormLabel>\n//                 <FormGroup>\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={sunday} onChange={handleChange} name=\"sunday\" />\n//                         }\n//                         label=\"Sunday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={monday} onChange={handleChange} name=\"monday\" />\n//                         }\n//                         label=\"Monday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={tuesday} onChange={handleChange} name=\"tuesday\" />\n//                         }\n//                         label=\"Tuesday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={wednesday} onChange={handleChange} name=\"wednesday\" />\n//                         }\n//                         label=\"Wednesday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={thursday} onChange={handleChange} name=\"thursday\" />\n//                         }\n//                         label=\"Thursday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={friday} onChange={handleChange} name=\"friday\" />\n//                         }\n//                         label=\"Friday\"\n//                     />\n//                     <FormControlLabel\n//                         control={\n//                             <Checkbox checked={saturday} onChange={handleChange} name=\"saturday\" />\n//                         }\n//                         label=\"Saturday\"\n//                     />\n//                 </FormGroup>\n//                 <FormHelperText>Must select at least one day</FormHelperText>\n//             </FormControl>\n//         </Grid>\n//     );\n// }\n"]},"metadata":{},"sourceType":"module"}